<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.louddt.tag.mapper.SysTaskRelationMapper" >
  <resultMap id="BaseResultMap" type="com.louddt.tag.entity.dbo.SysTaskRelation" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_node_name" property="startNodeName" jdbcType="VARCHAR" />
    <result column="end_node_name" property="endNodeName" jdbcType="VARCHAR" />
    <result column="task_id" property="taskId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, start_node_name, end_node_name, task_id, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tag_sys_task_relation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tag_sys_task_relation
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.louddt.tag.entity.dbo.SysTaskRelation" >
    insert into tag_sys_task_relation (id, name, start_node_name,
      end_node_name, task_id, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{startNodeName,jdbcType=VARCHAR}, 
      #{endNodeName,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.louddt.tag.entity.dbo.SysTaskRelation" >
    insert into tag_sys_task_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="startNodeName != null" >
        start_node_name,
      </if>
      <if test="endNodeName != null" >
        end_node_name,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startNodeName != null" >
        #{startNodeName,jdbcType=VARCHAR},
      </if>
      <if test="endNodeName != null" >
        #{endNodeName,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.louddt.tag.entity.dbo.SysTaskRelation" >
    update tag_sys_task_relation
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startNodeName != null" >
        start_node_name = #{startNodeName,jdbcType=VARCHAR},
      </if>
      <if test="endNodeName != null" >
        end_node_name = #{endNodeName,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.louddt.tag.entity.dbo.SysTaskRelation" >
    update tag_sys_task_relation
    set name = #{name,jdbcType=VARCHAR},
      start_node_name = #{startNodeName,jdbcType=VARCHAR},
      end_node_name = #{endNodeName,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into tag_sys_task_relation (id, name, start_node_name,
      end_node_name, task_id, create_time
      )
    values <foreach collection="list" item="item" index="index" separator=",">
     (#{item.id,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.startNodeName,jdbcType=VARCHAR},
      #{item.endNodeName,jdbcType=VARCHAR}, #{item.taskId,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}
      )
      </foreach>
  </insert>

  <delete id="deleteTaskRelationByTaskId" parameterType="java.lang.String">
    delete from tag_sys_task_relation where task_id = #{taskId,jdbcType=VARCHAR}
  </delete>

  <select id="queryTaskRelations" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from tag_sys_task_relation
    where task_id = #{taskId,jdbcType=VARCHAR}
  </select>

  <resultMap id="TaskEntryMap" type="com.louddt.tag.entity.vo.task.TaskEntryVo">
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <select id="queryRelationEntries" resultMap="TaskEntryMap" parameterType="java.lang.String">
    select name , 2 as type
    from tag_sys_task_relation
    where task_id = #{taskId,jdbcType=VARCHAR}
  </select>

  <select id="queryTaskRelationByQuery" resultMap="BaseResultMap" parameterType="com.louddt.tag.entity.vo.task.TaskDatasetMappingQuery" >
    select
    <include refid="Base_Column_List" />
    from tag_sys_task_relation
    where task_id = #{taskId,jdbcType=VARCHAR}
    and name = #{node,jdbcType=VARCHAR}
  </select>

  <resultMap id="ModeNodeEntriesMap" type="com.louddt.tag.entity.vo.task.TaskEntry">
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_node_name" property="startNodeName" jdbcType="VARCHAR" />
    <result column="end_node_name" property="endNodeName" jdbcType="VARCHAR" />
    <collection property="properties" ofType="com.louddt.tag.entity.vo.task.TaskEntryProperty">
        <result column="pname" property="name" jdbcType="VARCHAR" />
        <result column="value" property="value" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <select id="queryModeNodeEntries" resultMap="ModeNodeEntriesMap" parameterType="java.lang.String">
    select r.name,r.start_node_name,r.end_node_name,p.name pname,p.value
    from tag_sys_task_relation r
    left join tag_sys_task_node_property p on p.task_id = r.task_id and r.name = p.entry_name
    where r.task_id = #{taskId,jdbcType=VARCHAR}
    order by r.name
  </select>

  <resultMap id="TaskRelationRuleMap" type="com.louddt.tag.entity.vo.task.TaskRelationRuleVo">
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_node_name" property="from" jdbcType="VARCHAR" />
    <result column="end_node_name" property="to" jdbcType="VARCHAR" />
  </resultMap>
  <select id="queryTaskRelationRules" resultMap="TaskRelationRuleMap" parameterType="java.lang.String">
    select name,start_node_name,end_node_name
    from tag_sys_task_relation
    where task_id = #{taskId,jdbcType=VARCHAR}
  </select>
</mapper>